# name: Production CI/CD

# on:
#   workflow_dispatch:
#     inputs:
#       tag:
#         description: "Tag to deploy e.g. v1.0.0"
#         required: true
#         type: string

# run-name: "Deploy Production on tag ${{ inputs.tag }} by @${{ github.actor }}"
# jobs:
#   e2e-test:
#     timeout-minutes: 10
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Commit
#         uses: actions/checkout@v3
#         with:
#           ref: ${{ inputs.tag }}
#       - name: Setup NodeJS
#         uses: ./.github/actions/setup-node
#       # - name: Store Playwright's Version (Use For Caching)
#       #   run: |
#       #     PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
#       #     echo "Playwright's Version: $PLAYWRIGHT_VERSION"
#       # echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
#       # - name: Cache Playwright Browsers (Using Playwright's Version)
#       #   id: playwright-cache
#       #   uses: actions/cache@v3
#       #   with:
#       #     path: ~/.cache/ms-playwright
#       #     key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}
#       - name: Install Playwright Browsers (Cache Miss)
#         # if: steps.playwright-cache.outputs.cache-hit != 'true'
#         run: yarn playwright install --with-deps
#       # - name: Install Playwright Browsers (Cache Hit)
#       #   if: steps.playwright-cache.outputs.cache-hit == 'true'
#       #   run: yarn playwright install-deps
#       - name: Run E2E Tests
#         run: yarn test:e2e
#       - name: Store Artifacts From Failed Tests
#         if: failure()
#         uses: actions/upload-artifact@v2
#         with:
#           name: test-results
#           path: test-results/
#           retention-days: 7

#   # deploy-main:
#   #   needs: [lint, unit-test, e2e-test]
#   #   if: github.ref == 'refs/heads/main'
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: Trigger Webhook
#   #       run: |
#   #         URL="${{ secrets.DEPLOY_MAIN_WEBHOOK_URL }}"
#   #         curl -X POST -d {} "$URL" -H "Content-Type:application/json"
